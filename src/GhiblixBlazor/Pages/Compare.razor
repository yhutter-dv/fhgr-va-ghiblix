@page "/compare"
@inject HttpClient Http

<PageTitle>Compare</PageTitle>

<div class="filter-sidebar">
    <p class="title">Filter Settings</p>
    
    <p class="section-title">Runtime</p>
    <p class="section-subtitle">in minutes</p>
    <div class="slider-container">
        <p class="slider-text">0</p>
        <input type="range" min="0" max="100" value="50" class="slider">
        <p class="slider-text">100</p>
    </div>
    
    <p class="section-title">Number of races</p>
    <div class="slider-container">
        <p class="slider-text">0</p>
        <input type="range" min="0" max="100" value="50" class="slider">
        <p class="slider-text">100</p>
    </div>

    <p class="section-title">Year of Release</p>
    <div class="year-button-container">
        <button class="filter-button" type="button">1986</button>
        <button class="filter-button" type="button">1986</button>
        <button class="filter-button" type="button">1993</button>
        <button class="filter-button" type="button">1993</button>
        <button class="filter-button" type="button">1993</button>
        <button class="filter-button" type="button">1993</button>
    </div>
    
    <div class="spacer"></div>
    
    <div class="apply-filter-container">
        <button class="filter-button active" type="button">Apply</button>
        <button class="filter-button" type="button">Show All</button>
    </div>
</div>

<div class="content">
    <p class="section-title">Compare by Runtime</p>
    
    <div class="card-container">
        <div class="card">
            <p class="title">Score</p>
            <Chart Config="_runtimeWithScoreBarChartConfig" @ref="_runtimeWithScoreBarChart"></Chart>
        </div>
    </div>
</div>

@code {

    private BarChartConfig _runtimeWithScoreBarChartConfig;
    private Chart _runtimeWithScoreBarChart;

    protected override void OnInitialized()
    {
        _runtimeWithScoreBarChartConfig = new BarChartConfig
        {
            Options = new Options()
            {
                Plugins = new Plugins()
                {
                    Legend = new Legend()
                    {
                        Align = Align.Center,
                        Display = false,
                        Position = LegendPosition.Right
                    }
                },
                Scales = new Dictionary<string, Axis>()
                {
                    {
                        Scales.XAxisId, new Axis()
                        {
                            Grid = new Grid()
                            {
                                Display = false
                            },
                            Stacked = false,
                            Ticks = new Ticks()
                            {
                                MaxRotation = 0,
                                MinRotation = 0
                            }
                        }
                    },
                    {
                        Scales.YAxisId, new Axis()
                        {
                            Stacked = false,
                            Grid = new Grid()
                            {
                                Display = false
                            }
                        }
                    }
                }
            },
            Data =
            {
                Labels = ["1986", "1989", "1993"]
            }
        };

        _runtimeWithScoreBarChartConfig.Data.Datasets.Add(new BarDataset
        {
            Label = "70 Minutes",
            Data = [9, 10, 3],
            BackgroundColor = ["#5DE4C7"],
            BorderWidth = 0 
        });

        _runtimeWithScoreBarChartConfig.Data.Datasets.Add(new BarDataset
        {
            Label = "90 Minutes",
            Data = [7, 2, 1],
            BackgroundColor = ["#89DDFF"],
            BorderWidth = 0,
        });
        _runtimeWithScoreBarChartConfig.Data.Datasets.Add(new BarDataset
        {
            Label = "120 Minutes",
            Data = [3, 5, 6],
            BackgroundColor = ["#D0679D"],
            BorderWidth = 0 
        });
    } 
}

